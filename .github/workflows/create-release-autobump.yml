name: "Bump Version, Generate Changelog, Tag & Release"

on:
  push:
    branches:
      - main   # triggers on direct commits
    paths:
      - 'laurus_llm/**'
      - './pyproject.toml'
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - 'laurus_llm/**'
      - './pyproject.toml'
  workflow_dispatch:

permissions:
  contents: write  # needed to push commits, tags, and releases

jobs:
  bump-tag-release:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # required for tags

      - name: Set Git config
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Bump version in pyproject.toml
        id: bump_version
        uses: apowis/pyproject-bump-version@v0.0.2
        with:
          file_to_bump: "./pyproject.toml"
          bump_type: "micro"   # can be micro/major/minor
          main_branch: "main"
          python_version: "3.10"

      - name: Commit bumped version
        run: |
          git add pyproject.toml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}" || echo "No changes to commit"
          git push origin main || echo "Push failed (likely no changes)"

      - name: Generate Changelog
        id: changelog
        uses: janheinrichmerker/action-github-changelog-generator@v2.4
        with:
          tag_prefix: "v"
          token: ${{ secrets.GITHUB_TOKEN }}
          output: "CHANGELOG.md" # write to CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit updated CHANGELOG.md
        run: |
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md for v${{ steps.bump_version.outputs.new_version }}" || echo "No changelog changes"
          git push origin main || echo "Push failed"

      - name: Create Git tag
        run: |
          NEW_TAG="v${{ steps.bump_version.outputs.new_version }}"
          git tag -a "$NEW_TAG" -m "Release $NEW_TAG"
          git push origin "$NEW_TAG"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ steps.bump_version.outputs.new_version }}"
          release_name: "v${{ steps.bump_version.outputs.new_version }}"
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false   # set true for prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
